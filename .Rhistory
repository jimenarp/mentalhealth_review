# #cf0029
# dark red
# #fa9d5f
# light orange
# #d1dc5e
# yellow
# #00a18f
# teal
# #91bfdb
# light blue
# #374c80
# blue
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/metareg_clustered_logs.R', echo=TRUE)
View(consolidated.final)
table(final$female_share)
setwd(dir)
load(file='data/final/final.Rdata')
final<- final %>% mutate(int_All=1)
final<- final %>% mutate(out_All=1) %>%
mutate(out_Depression=ifelse(outcome_category=='Depression',1,0)) %>%
mutate(out_Stress_Anx=ifelse(outcome_category=='Stress'|outcome_category=='Anxiety',1,0)) %>%
mutate(out_Happy_Sat=ifelse(outcome_category=='Happiness or Satisfaction',1,0))
# Random Effects Using Sidik-Jonkman estimator ("SJ")
all_all<-rma(yi=z_treatment_effect, sei=z_se, slab=archive_name, weighted=TRUE, data=final, method='SJ')
all_UCT<-rma(yi=z_treatment_effect, sei=z_se, slab=archive_name, weighted=TRUE, data=final %>% filter(int_UCT==1), method='SJ')
for(i in c('int_All', 'int_UCT','int_CCT', 'int_Neighborhood', 'int_Grad', 'int_Lottery', 'int_Asset', 'int_Healthcare')) {
for( j in c('out_All','out_Depression', 'out_Stress_Anx','out_Happy_Sat')){
tryCatch({
temp_data<-final[final[[i]]==1,]
temp_data<-temp_data[temp_data[[j]]==1,]
temp_reg<-rma(yi=z_treatment_effect, sei=z_se, slab=archive_name, weighted=TRUE, data=temp_data, method='SJ')
temp_coef<-temp_reg$beta[1,1]
temp_coef<- toformat(temp_coef, decimals)
temp_se<-temp_reg$se
temp_pval<-temp_reg$pval
temp_se<- toformat(temp_se, decimals)
temp_se<- paste("(",temp_se,")",sep="")
temp_se<-p.stars(temp_pval, temp_se)
temp_I2<-temp_reg$I2
temp_I2<- toformat(temp_I2, decimals)
temp_name_coef<-paste('coef',substring(i, 5 ),substring(j, 5 ),sep='_')
temp_name_se<-paste('se',substring(i, 5 ),substring(j, 5 ),sep='_')
temp_name_I2<-paste('I2',substring(i, 5 ),substring(j, 5 ),sep='_')
temp_n<-temp_reg$k
temp_s<-length(unique(temp_data$archive_name))
temp_name_ns<-paste('ns',substring(i, 5 ),substring(j, 5 ),sep='_')
temp_ns<-paste('[',temp_n,'/',temp_s,']')
assign(temp_name_coef, temp_coef)
assign(temp_name_se, temp_se)
assign(temp_name_I2, temp_I2)
assign(temp_name_ns, temp_ns)
}, error=function(e){})
}
}
consolidated.all<- data.frame("group"=c("","All Interventions","","","" ),
"Reg 1"=c("",coef_All_All,se_All_All,ns_All_All,""),
"Reg 2"=c("",coef_All_Depression,se_All_Depression,ns_All_Depression,""),
"Reg 3"=c("",coef_All_Stress_Anx,se_All_Stress_Anx,ns_All_Stress_Anx,""),
"Reg 4"=c("",coef_All_Happy_Sat,se_All_Happy_Sat,ns_All_Happy_Sat,"")
)
consolidated.UCT<- data.frame("group"=c("UCT","","","" ),
"Reg 1"=c(coef_UCT_All,se_UCT_All,ns_UCT_All,""),
"Reg 2"=c(coef_UCT_Depression,se_UCT_Depression,ns_UCT_Depression,""),
"Reg 3"=c(coef_UCT_Stress_Anx,se_UCT_Stress_Anx,ns_UCT_Stress_Anx,""),
"Reg 4"=c(coef_UCT_Happy_Sat,se_UCT_Happy_Sat,ns_UCT_Happy_Sat,"")
)
consolidated.CCT<- data.frame("group"=c("CCT","","","" ),
"Reg 1"=c(coef_CCT_All,se_CCT_All,ns_CCT_All,""),
"Reg 2"=c(coef_CCT_Depression,se_CCT_Depression,ns_CCT_Depression,""),
"Reg 3"=c(coef_CCT_Stress_Anx,se_CCT_Stress_Anx,ns_CCT_Stress_Anx,""),
"Reg 4"=c(coef_CCT_Happy_Sat,se_CCT_Happy_Sat,ns_CCT_Happy_Sat,"")
)
consolidated.Neighborhood<- data.frame("group"=c("Neighborhood","","","" ),
"Reg 1"=c(coef_Neighborhood_All,se_Neighborhood_All,ns_Neighborhood_All,""),
"Reg 2"=c(coef_Neighborhood_Depression,se_Neighborhood_Depression,ns_Neighborhood_Depression,""),
"Reg 3"=c(coef_Neighborhood_Stress_Anx,se_Neighborhood_Stress_Anx,ns_Neighborhood_Stress_Anx,""),
"Reg 4"=c(coef_Neighborhood_Happy_Sat,se_Neighborhood_Happy_Sat,ns_Neighborhood_Happy_Sat,"")
)
consolidated.Grad<- data.frame("group"=c("Graduation","","","" ),
"Reg 1"=c(coef_Grad_All,se_Grad_All,ns_Grad_All,""),
"Reg 2"=c(coef_Grad_Depression,se_Grad_Depression,ns_Grad_Depression,""),
"Reg 3"=c(coef_Grad_Stress_Anx,se_Grad_Stress_Anx,ns_Grad_Stress_Anx,""),
"Reg 4"=c(coef_Grad_Happy_Sat,se_Grad_Happy_Sat,ns_Grad_Happy_Sat,"")
)
consolidated.Lottery<- data.frame("group"=c("Lottery","","","" ),
"Reg 1"=c(coef_Lottery_All,se_Lottery_All,ns_Lottery_All,""),
"Reg 2"=c('-','-',"-",""),
"Reg 3"=c(coef_Lottery_Stress_Anx,se_Lottery_Stress_Anx,ns_Lottery_Stress_Anx,""),
"Reg 4"=c(coef_Lottery_Happy_Sat,se_Lottery_Happy_Sat,ns_Lottery_Happy_Sat,"")
)
consolidated.Asset<- data.frame("group"=c("Asset","","","" ),
"Reg 1"=c(coef_Asset_All,se_Asset_All,ns_Asset_All,""),
"Reg 2"=c(coef_Asset_Depression,se_Asset_Depression,ns_Asset_Depression,""),
"Reg 3"=c(coef_Asset_Stress_Anx,se_Asset_Stress_Anx,ns_Asset_Stress_Anx,""),
"Reg 4"=c(coef_Asset_Happy_Sat,se_Asset_Happy_Sat,ns_Asset_Happy_Sat,"")
)
consolidated.Healthcare<- data.frame("group"=c("Insurance","","","" ),
"Reg 1"=c(coef_Healthcare_All,se_Healthcare_All,ns_Healthcare_All,""),
"Reg 2"=c(coef_Healthcare_Depression,se_Healthcare_Depression,ns_Healthcare_Depression,""),
"Reg 3"=c(coef_Healthcare_Stress_Anx,se_Healthcare_Stress_Anx,ns_Healthcare_Stress_Anx,""),
"Reg 4"=c(coef_Healthcare_Happy_Sat,se_Healthcare_Happy_Sat,ns_Healthcare_Happy_Sat,"")
)
consolidated_final<-rbind(consolidated.all, consolidated.UCT ,consolidated.CCT,consolidated.Neighborhood,  consolidated.Grad, consolidated.Lottery,consolidated.Asset,consolidated.Healthcare )
names(consolidated_final)<-c("","(1)","(2)","(3)","(4)")
pooled.tex <- xtable(consolidated_final,
caption="Pooled  Effect (Random Effects)",
align=c(
"l{0.01cm}",
"l{0.3cm}",
"c{0.3cm}",
"c{0.3cm}",
"c{0.3cm}",
"c{0.3cm}"))
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- 0
addtorow$command <- c(" & All Mental Health Outcomes & Depression & Stress or Anxiety & Happiness\\\\  ")
setwd(diroverleaf)
print(pooled.tex, file = "tables/pooled.tex", compress = FALSE,
include.rownames=FALSE,
#hline.after = c(-1,0,0,4,8,12,16,23,23),
# sanitize.colnames.function=bold,
add.to.row = addtorow,
size = "small",
caption.placement =  "top" , justify ='centre')
colorbar<-'#1532a1'
colorline<-"#edc148"
to_graph<-data.frame("outcome"=c("All Mental Health Outcomes","Depression","Stress or Anxiety","Happiness"),
"value"=c(coef_All_All, coef_All_Depression, coef_All_Stress_Anx, coef_All_Happy_Sat),
"se"=c(substring(se_All_All,2,6), substring(se_All_Depression,2,6) , substring(se_All_Stress_Anx,2,6), substring(se_All_Happy_Sat,2,6)))
to_graph<-to_graph %>% mutate(value=as.numeric(as.character(value))) %>% mutate(se=as.numeric(as.character(se)))
to_graph$outcome <- factor(to_graph$outcome,levels = c("All Mental Health Outcomes","Depression","Stress or Anxiety","Happiness"))
p<- ggplot(to_graph, aes(x=outcome, y=value)) +
geom_bar(stat="identity", fill=colorbar) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.3, colour=colorline, size=1) +
labs(title="Pooled Effect on Different Outcomes", x="", y = "Treatment Effect (in SD)", size=1)+
theme_minimal() +
geom_text(aes(label=round(value,3)), color='white',vjust=8, size=5)
p
setwd(dir)
load(file='data/final/final.Rdata')
final<- final %>% mutate(int_All=1)
final<- final %>% mutate(out_All=1) %>%
mutate(out_Depression=ifelse(outcome_category=='Depression',1,0)) %>%
mutate(out_Stress_Anx=ifelse(outcome_category=='Stress'|outcome_category=='Anxiety',1,0)) %>%
mutate(out_Happy_Sat=ifelse(outcome_category=='Happiness or Satisfaction',1,0))
# Random Effects Using Sidik-Jonkman estimator ("SJ")
all_all<-rma(yi=z_treatment_effect, sei=z_se, slab=archive_name, weighted=TRUE, data=final, method='SJ')
all_UCT<-rma(yi=z_treatment_effect, sei=z_se, slab=archive_name, weighted=TRUE, data=final %>% filter(int_UCT==1), method='SJ')
for(i in c('int_All', 'int_UCT','int_CCT', 'int_Neighborhood', 'int_Grad', 'int_Lottery', 'int_Asset', 'int_Healthcare')) {
for( j in c('out_All','out_Depression', 'out_Stress_Anx','out_Happy_Sat')){
tryCatch({
temp_data<-final[final[[i]]==1,]
temp_data<-temp_data[temp_data[[j]]==1,]
temp_name_coef<-paste('coef',substring(i, 5 ),substring(j, 5 ),sep='_')
temp_name_se<-paste('se',substring(i, 5 ),substring(j, 5 ),sep='_')
temp_name_I2<-paste('I2',substring(i, 5 ),substring(j, 5 ),sep='_')
temp_name_ns<-paste('ns',substring(i, 5 ),substring(j, 5 ),sep='_')
if (nrow(temp_data)>0){
temp_reg<-rma(yi=z_treatment_effect, sei=z_se, slab=archive_name, weighted=TRUE, data=temp_data, method='SJ')
temp_coef<-temp_reg$beta[1,1]
temp_coef<- toformat(temp_coef, decimals)
if (temp_reg$p<length(unique(temp_data$intervention_code))){
temp_reg<-robust(temp_reg, cluster=temp_data$intervention_code)
}
temp_se<-temp_reg$se
temp_pval<-temp_reg$pval
temp_se<- toformat(temp_se, decimals)
temp_se<- paste("(",temp_se,")",sep="")
temp_se<-p.stars(temp_pval, temp_se)
temp_I2<-temp_reg$I2
temp_I2<- toformat(temp_I2, decimals)
temp_n<-temp_reg$k
temp_s<-length(unique(temp_data$id))
temp_ns<-paste('[',temp_n,'/',temp_s,']')
} else {
temp_coef<-"---"
temp_se<-""
temp_ns<-"[ 0 / 0 ]"
}
assign(temp_name_coef, temp_coef)
assign(temp_name_se, temp_se)
assign(temp_name_I2, temp_I2)
assign(temp_name_ns, temp_ns)
}, error=function(e){})
}
}
consolidated.all<- data.frame("group"=c("","All Interventions","","","" ),
"Reg 1"=c("",coef_All_All,se_All_All,ns_All_All,""),
"Reg 2"=c("",coef_All_Depression,se_All_Depression,ns_All_Depression,""),
"Reg 3"=c("",coef_All_Stress_Anx,se_All_Stress_Anx,ns_All_Stress_Anx,""),
"Reg 4"=c("",coef_All_Happy_Sat,se_All_Happy_Sat,ns_All_Happy_Sat,"")
)
consolidated.UCT<- data.frame("group"=c("Unconditional Cash Transfer","","","" ),
"Reg 1"=c(coef_UCT_All,se_UCT_All,ns_UCT_All,""),
"Reg 2"=c(coef_UCT_Depression,se_UCT_Depression,ns_UCT_Depression,""),
"Reg 3"=c(coef_UCT_Stress_Anx,se_UCT_Stress_Anx,ns_UCT_Stress_Anx,""),
"Reg 4"=c(coef_UCT_Happy_Sat,se_UCT_Happy_Sat,ns_UCT_Happy_Sat,"")
)
consolidated.CCT<- data.frame("group"=c("Conditional Cash Transfer","","","" ),
"Reg 1"=c(coef_CCT_All,se_CCT_All,ns_CCT_All,""),
"Reg 2"=c(coef_CCT_Depression,se_CCT_Depression,ns_CCT_Depression,""),
"Reg 3"=c(coef_CCT_Stress_Anx,se_CCT_Stress_Anx,ns_CCT_Stress_Anx,""),
"Reg 4"=c(coef_CCT_Happy_Sat,se_CCT_Happy_Sat,ns_CCT_Happy_Sat,"")
)
consolidated.Neighborhood<- data.frame("group"=c("Housing Voucher","","","" ),
"Reg 1"=c(coef_Neighborhood_All,se_Neighborhood_All,ns_Neighborhood_All,""),
"Reg 2"=c(coef_Neighborhood_Depression,se_Neighborhood_Depression,ns_Neighborhood_Depression,""),
"Reg 3"=c(coef_Neighborhood_Stress_Anx,se_Neighborhood_Stress_Anx,ns_Neighborhood_Stress_Anx,""),
"Reg 4"=c(coef_Neighborhood_Happy_Sat,se_Neighborhood_Happy_Sat,ns_Neighborhood_Happy_Sat,"")
)
consolidated.Grad<- data.frame("group"=c("Poverty Graduation Program","","","" ),
"Reg 1"=c(coef_Grad_All,se_Grad_All,ns_Grad_All,""),
"Reg 2"=c(coef_Grad_Depression,se_Grad_Depression,ns_Grad_Depression,""),
"Reg 3"=c(coef_Grad_Stress_Anx,se_Grad_Stress_Anx,ns_Grad_Stress_Anx,""),
"Reg 4"=c(coef_Grad_Happy_Sat,se_Grad_Happy_Sat,ns_Grad_Happy_Sat,"")
)
consolidated.Lottery<- data.frame("group"=c("Lottery Win","","","" ),
"Reg 1"=c(coef_Lottery_All,se_Lottery_All,ns_Lottery_All,""),
"Reg 2"=c(coef_Lottery_Depression,se_Lottery_Depression,ns_Lottery_Depression,""),
"Reg 3"=c(coef_Lottery_Stress_Anx,se_Lottery_Stress_Anx,ns_Lottery_Stress_Anx,""),
"Reg 4"=c(coef_Lottery_Happy_Sat,se_Lottery_Happy_Sat,ns_Lottery_Happy_Sat,"")
)
consolidated.Asset<- data.frame("group"=c("Asset Transfer","","","" ),
"Reg 1"=c(coef_Asset_All,se_Asset_All,ns_Asset_All,""),
"Reg 2"=c(coef_Asset_Depression,se_Asset_Depression,ns_Asset_Depression,""),
"Reg 3"=c(coef_Asset_Stress_Anx,se_Asset_Stress_Anx,ns_Asset_Stress_Anx,""),
"Reg 4"=c(coef_Asset_Happy_Sat,se_Asset_Happy_Sat,ns_Asset_Happy_Sat,"")
)
consolidated.Healthcare<- data.frame("group"=c("Health Insurance Provision","","","" ),
"Reg 1"=c(coef_Healthcare_All,se_Healthcare_All,ns_Healthcare_All,""),
"Reg 2"=c(coef_Healthcare_Depression,se_Healthcare_Depression,ns_Healthcare_Depression,""),
"Reg 3"=c(coef_Healthcare_Stress_Anx,se_Healthcare_Stress_Anx,ns_Healthcare_Stress_Anx,""),
"Reg 4"=c(coef_Healthcare_Happy_Sat,se_Healthcare_Happy_Sat,ns_Healthcare_Happy_Sat,"")
)
consolidated_final<-rbind(consolidated.all, consolidated.UCT ,consolidated.CCT,consolidated.Neighborhood,  consolidated.Grad, consolidated.Lottery,consolidated.Asset,consolidated.Healthcare )
names(consolidated_final)<-c("","(1)","(2)","(3)","(4)")
pooled.tex <- xtable(consolidated_final,
caption="Pooled  Effect (Random Effects)",
align=c(
"l{0.01cm}",
"l{0.3cm}",
"c{0.3cm}",
"c{0.3cm}",
"c{0.3cm}",
"c{0.3cm}"),format.args = list(digits = 3))
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- 0
addtorow$command <- c(" &  \\shortstack{All Mental Health \\\\ Outcomes} & Depression & Stress or Anxiety & Happiness    \\\\  ")
setwd(diroverleaf)
print(pooled.tex, file = "tables/pooled_clustered.tex", compress = FALSE,
include.rownames=FALSE,
#hline.after = c(-1,0,0,4,8,12,16,23,23),
# sanitize.colnames.function=bold,
add.to.row = addtorow,
size = "small",
caption.placement =  "top" , justify ='centre',
floating=FALSE) #eliminats environment of the table
to_graph<-data.frame("outcome"=c("All Outcomes","Depression","Stress or Anxiety","Happiness" ),
"value"=c(coef_All_All, coef_All_Depression, coef_All_Stress_Anx, coef_All_Happy_Sat),
"se"=c(substring(se_All_All,2,6), substring(se_All_Depression,2,6) , substring(se_All_Stress_Anx,2,6), substring(se_All_Happy_Sat,2,6)))
to_graph<-to_graph %>% mutate(value=as.numeric(as.character(value))) %>% mutate(se=as.numeric(as.character(se)))
to_graph$outcome <- factor(to_graph$outcome,levels = c("Stress or Anxiety","Depression","Happiness","All Outcomes"))
to_graph<-to_graph %>% mutate(t=value/se) %>% mutate(pval=ifelse(abs(t)>=2.58,0.001, ifelse(abs(t)>=1.96& abs(t)<2.58,0.05, ifelse(abs(t)>=1.65&abs(t)<1.96, 0.1, 3)))) %>%
mutate(pval2=pt(q=t, df=100,lower.tail=FALSE)) %>%
mutate(value_lab=p.stars(pval2, value))
p1<-  ggplot(to_graph, aes(x=outcome, y=value)) +
geom_bar(stat="identity", aes(fill=factor(outcome))) +
scale_fill_manual( values = c("gray","gray","gray",'black'))+
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.2, color='black') +
labs(title="", x="", y = "")+
#theme(axis.text.x=element_text(size=10))+
#theme(axis.text.y=element_text(size=10))+
#theme(axis.title.x=element_text(size=10))+
theme_minimal(base_size=24)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
plot.title=element_text(size=20, face='bold'))+
geom_text(aes(label=value_lab), color='black',position = position_nudge(y = to_graph$se+0.014), size=6)+
coord_flip()+ ggtitle('Mental Health Outcomes')+scale_x_discrete(labels=c("Stress\n or Anxiety","Depression","Happiness","All Outcomes" ))+ylim(0,0.189)
p1
setwd(dir)
load(file='data/final/final.Rdata')
widthsize=10
heightsize=6
ggthemr('fresh')
### AGE
agegraph<-qplot(age, z_treatment_effect, size=invSE, data=final)+
stat_smooth(method="loess", aes(weight=invSE))+ylab('Treatment Effect (Z-score)')+xlab('Age')+
theme(
legend.position="none",
legend.title = element_blank())
agegraph
### FEMALE
femalegraph<-qplot(female_share, z_treatment_effect, size=invSE, data=final)+
stat_smooth(method="loess", aes(weight=invSE))+ylab('Treatment Effect (Z-score)')+xlab('Female Share (%)')+
theme(
legend.position="none",
legend.title = element_blank())
femalegraph
?forest
setwd(dir)
load(file='data/final/final_one.Rdata')
load(file='data/final/overview.Rdata')
load(file='./data/final/final.Rdata')
final_one<-final_one[order(final_one$one_outcome),]
final_one<-merge(final_one, overview, by='authors', all.x=TRUE)
final_one <-final_one %>% mutate(country=ifelse(archive_name=='Banerjee_15','Multiple', country))%>%
mutate(treatment=ifelse(treatment =='Neighborhood', 'Housing Voucher',
ifelse(treatment =='Healthcare', 'Insurance Provision',
ifelse(treatment=='Asset','Asset Transfer',
ifelse(treatment=='Grad','Poverty Graduation Program', treatment)))))
forest_all<-metagen(one_outcome ,
one_outcome_sd,
data = final_one,
studlab = authors,
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ",
hakn = TRUE,
prediction = TRUE,
sm = "SMD")
metagen
forst_all
forest_all
View(forest_all)
table(final$female_share)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/clean_july.R', echo=TRUE)
############## Packages
#Function to check if package exists, load if not
rm(list=ls())
ipak <- function(pkg){
new_pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new_pkg))
install.packages(new_pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packs = c("tidyverse","pwr","metafor","devtools","xlsx", "puniform","metafore","RColorBrewer","latex2exp",
"xtable","here","dmetar","meta","metafor","pvaluefunctions",'googlesheets4',
"foreign", "ggplot2",'tidyverse', 'dplyr', 'plyr', 'pastecs', 'Hmisc',
'doBy','expss', 'maps','data.table', 'tigris','readxl' ,'fuzzyjoin',
"maps", "sjlabelled", "rgdal", "tmaptools", "tigris", "tmap", 'wesanderson',
'plm','corrplot','ISLR', 'gridExtra','jtools',"stargazer", 'rgdal', 'weightr',
'raster','vistime','webshot','plotly','hrbrthemes','factoextra','kableExtra','klaR','ggsignif',
'vtable','ggrepel','ggsci','scales','ihs','xtable','sjmisc','stringr','readstata13','reshape2','ggthemr','haven','meta', 'PRISMAstatement','DiagrammeR')
ipak(packs)
select<-dplyr::select
decimals<-3
p.stars <-function(pval, se) {
if (pval<=0.001) {
se<-paste(se, '***',sep='' )
} else if  (pval>0.001 & pval<=0.05) {
se<-paste(se, '**',sep='' )
} else if  (pval>0.05 & pval<=0.1) {
se<-paste(se, '*',sep='' )
} else {
se<-se
}
}
toformat <-function(number, n) {
number=as.character(prettyNum(round(number,n),nsmall=n, big.mark=',', format=f))
}
dir<-"/Users/jimenaromero/Dropbox/wellcome_review_2020/Revision_2021-01/"
setwd(dir)
diroverleaf<-"/Users/jimenaromero/Dropbox/Aplicaciones/Overleaf/wellcome_revision_21/"
#dirdata<-"/Users/jimenaromero/Dropbox/wellcome_review_2020/Revision_2021-01/data"
#dircode<-"/Users/jimenaromero/Dropbox/wellcome_review_2020/Revision_2021-01/code"
#outdir_overleaf<-"/Users/jimenaromero/Dropbox/Aplicaciones/Overleaf/wellcome_revision_21/tables"
setwd(dir)
source("code/aux/PublicationbiasGMM/R/PublicationbiasPackage.R")
source("code/aux/AndrewsKasyRCode/VariationVarianceLogLikelihood.R") # Andrews & Casy (2017) selection model
source("code/aux/AndrewsKasyRCode/AuxiliaryFunctions.R") #for calculating se of beta estimate
source("code/aux/AndrewsKasyRCode/Step_function_normal_cdf.R")
source("code/aux/AndrewsKasyRCode/ReplicationAnalyticLogLikelihood.R")
#newfile
raw<-read_sheet("https://docs.google.com/spreadsheets/d/19PsUUHQ5__spNc4z9VT7b-aC6cbzqwRdqj2AvjtS-SM/edit#gid=280494917", sheet="Joel's full text extraction")
raw<-as.data.frame(raw)
source(paste(dir,"code/clean_july.R",sep='')) # clean raw data into final data
source(paste(dir,"code/meta_pooled_clustered.R",sep='')) # pooled estimates clustered by study
source(paste(dir,"code/meta_pooled_clustered_HIC.R",sep='')) # pooled estimates clustered by study for HIC
source(paste(dir,"code/meta_pooled_clustered_LMIC.R",sep='')) # pooled estimates clustered by study for LMIC
#source(paste(dir,"code/metareg.R",sep='')) # meta regression with covariates
source(paste(dir,"code/metareg_clustered.R",sep='')) # meta regression with covariates
source(paste(dir,"code/metareg_clustered_outcomes.R",sep='')) # meta regression with covariates
source(paste(dir,"code/list_excluded.R",sep='')) # list of excluded
source(paste(dir,"code/meta_oneoutcome.R",sep='')) # estimates one outcome per study for forest plot
source(paste(dir,"code/meta_forest_one.R",sep='')) # forestplot
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/metareg_clustered_logs.R', echo=TRUE)
View(consolidated_final)
gdp<-read.csv('data/raw/imf_gdppercapita.csv') # LOAD File
############## Packages
#Function to check if package exists, load if not
rm(list=ls())
ipak <- function(pkg){
new_pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new_pkg))
install.packages(new_pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packs = c("tidyverse","pwr","metafor","devtools","xlsx", "puniform","metafore","RColorBrewer","latex2exp",
"xtable","here","dmetar","meta","metafor","pvaluefunctions",'googlesheets4',
"foreign", "ggplot2",'tidyverse', 'dplyr', 'plyr', 'pastecs', 'Hmisc',
'doBy','expss', 'maps','data.table', 'tigris','readxl' ,'fuzzyjoin',
"maps", "sjlabelled", "rgdal", "tmaptools", "tigris", "tmap", 'wesanderson',
'plm','corrplot','ISLR', 'gridExtra','jtools',"stargazer", 'rgdal', 'weightr',
'raster','vistime','webshot','plotly','hrbrthemes','factoextra','kableExtra','klaR','ggsignif',
'vtable','ggrepel','ggsci','scales','ihs','xtable','sjmisc','stringr','readstata13','reshape2','ggthemr','haven','meta', 'PRISMAstatement','DiagrammeR')
ipak(packs)
select<-dplyr::select
decimals<-3
p.stars <-function(pval, se) {
if (pval<=0.001) {
se<-paste(se, '***',sep='' )
} else if  (pval>0.001 & pval<=0.05) {
se<-paste(se, '**',sep='' )
} else if  (pval>0.05 & pval<=0.1) {
se<-paste(se, '*',sep='' )
} else {
se<-se
}
}
toformat <-function(number, n) {
number=as.character(prettyNum(round(number,n),nsmall=n, big.mark=',', format=f))
}
dir<-"/Users/jimenaromero/Dropbox/wellcome_review_2020/Revision_2021-01/"
setwd(dir)
diroverleaf<-"/Users/jimenaromero/Dropbox/Aplicaciones/Overleaf/wellcome_revision_21/"
#dirdata<-"/Users/jimenaromero/Dropbox/wellcome_review_2020/Revision_2021-01/data"
#dircode<-"/Users/jimenaromero/Dropbox/wellcome_review_2020/Revision_2021-01/code"
#outdir_overleaf<-"/Users/jimenaromero/Dropbox/Aplicaciones/Overleaf/wellcome_revision_21/tables"
setwd(dir)
gdp<-read.csv('data/raw/imf_gdppercapita.csv') # LOAD File
View(gdp)
setwd(dir)
load(file='data/final/final.Rdata')
final<-final %>% mutate(int_All=1) %>%
mutate(out_All=1) %>%
mutate(out_Depression=ifelse(outcome_category=='Depression',1,0)) %>%
mutate(out_Stress_Anx=ifelse(outcome_category=='Stress'|outcome_category=='Anxiety',1,0)) %>%
mutate(out_Happy_Sat=ifelse(outcome_category=='Happiness or Satisfaction',1,0)) %>%
mutate(out_Other=ifelse(outcome_category=='Other'|outcome_category=='Self-Esteem'|outcome_category=='Optimism',1,0))
hist(final$intervention_value)
hist(final$intervention_gdppercapita)
final<-final %>% mutate(intervention_gdppercapita = intervention_value/gdppercapita*1000)%>%
mutate(age_missing=ifelse(is.na(age),1,0)) %>%
mutate(age=ifelse(is.na(age),0,age)) %>%
mutate(female_missing=ifelse(is.na(female_share),1,0)) %>%
mutate(female_share=ifelse(is.na(female_share),0,female_share)) %>%
mutate(intervention_gdppercapita_missing=ifelse(is.na(intervention_gdppercapita),1,0)) %>%
mutate(intervention_gdppercapita=ifelse(is.na(intervention_gdppercapita),0,intervention_gdppercapita)) %>%
mutate(duration_years_missing=ifelse(is.na(duration_years),1,0)) %>%
mutate(duration_years=ifelse(is.na(duration_years),0,duration_years)) %>%
mutate(intervention_peryear_gddpercapita=intervention_gdppercapita/duration_years) %>%
mutate(intervention_peryear_gddpercapita=ifelse(intervention_peryear_gddpercapita=='Inf',NA,intervention_peryear_gddpercapita)) %>%
mutate(intervention_peryear_gddpercapita_missing=ifelse(is.na(intervention_peryear_gddpercapita),1,0)) %>%
mutate(intervention_peryear_gddpercapita=ifelse(is.na(intervention_peryear_gddpercapita),0,intervention_peryear_gddpercapita))
hist(final$intervention_gdppercapita)
table(final$intervention_value)
table(final$intervention_gdppercapita)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/metareg.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/metareg_clustered.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/metareg_clustered_logs.R', echo=TRUE)
View(consolidated.final)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/meta_pooled.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/metareg_clustered.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/metareg_clustered_outcomes.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/two_cat/metareg_clustered.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/two_cat/metareg_clustered_HIC.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/two_cat/metareg_clustered_LMIC.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/two_cat/metareg_clustered_HIC.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/two_cat/metareg_clustered.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/two_cat/metareg_clustered.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/two_cat/metareg_clustered.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/two_cat/metareg_clustered_HIC.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/two_cat/metareg_clustered_LMIC.R', echo=TRUE)
source('~/Dropbox/wellcome_review_2020/Revision_2021-01/code/wellcome_overview.R', echo=TRUE)
temp_data<-final[final[['int_Lottery']]==1,]
temp_reg<-rma(yi=z_treatment_effect, sei=z_se, slab=archive_name, data=temp_data, method='SJ',
mods = ~ age+ LMIC + lumpsum + female_share   + intervention_gdppercapita + duration_years+age_missing+female_missing+intervention_gdppercapita_missing+duration_years_missing )
setwd(dir)
load(file='data/final/final.Rdata')
final<-final %>%
mutate(int_All=1) %>%
mutate(out_All=1) %>%
mutate(out_Depression=ifelse(outcome_category=='Depression',1,0)) %>%
mutate(out_Stress_Anx=ifelse(outcome_category=='Stress'|outcome_category=='Anxiety',1,0)) %>%
mutate(out_Happy_Sat=ifelse(outcome_category=='Happiness or Satisfaction',1,0)) %>%
mutate(out_Other=ifelse(outcome_category=='Other'|outcome_category=='Self-Esteem'|outcome_category=='Optimism',1,0))
final<-final %>%
#mutate(intervention_gdppercapita = log(intervention_value/gdppercapita))%>%
# mutate(intervention_gdppercapita = intervention_value/(gdppercapita*1000))%>%
mutate(intervention_gdppercapita = intervention_value/(gdppercapita))%>%
mutate(age_missing=ifelse(is.na(age),1,0)) %>%
mutate(age=ifelse(is.na(age),0,age)) %>%
mutate(female_missing=ifelse(is.na(female_share),1,0)) %>%
mutate(female_share=ifelse(is.na(female_share),0,female_share)) %>%
mutate(intervention_gdppercapita_missing=ifelse(is.na(intervention_gdppercapita),1,0)) %>%
mutate(intervention_gdppercapita=ifelse(is.na(intervention_gdppercapita),0,intervention_gdppercapita)) %>%
mutate(duration_years_missing=ifelse(is.na(duration_years),1,0)) %>%
mutate(duration_years=ifelse(is.na(duration_years),0,duration_years)) %>%
mutate(intervention_peryear_gddpercapita=intervention_gdppercapita/duration_years) %>%
mutate(intervention_peryear_gddpercapita=ifelse(intervention_peryear_gddpercapita=='Inf',NA,intervention_peryear_gddpercapita)) %>%
mutate(intervention_peryear_gddpercapita_missing=ifelse(is.na(intervention_peryear_gddpercapita),1,0)) %>%
mutate(intervention_peryear_gddpercapita=ifelse(is.na(intervention_peryear_gddpercapita),0,intervention_peryear_gddpercapita))
temp_data<-final[final[['int_Lottery']]==1,]
temp_reg<-rma(yi=z_treatment_effect, sei=z_se, slab=archive_name, data=temp_data, method='SJ',
mods = ~ age+ LMIC + lumpsum + female_share   + intervention_gdppercapita + duration_years+age_missing+female_missing+intervention_gdppercapita_missing+duration_years_missing )
temp_reg
temp_reg<-rma(yi=z_treatment_effect, sei=z_se, slab=archive_name, data=temp_data, method='SJ',
mods = ~ age+ LMIC + lumpsum + female_share   + intervention_gdppercapita + +age_missing+female_missing+intervention_gdppercapita_missing+duration_years_missing )
