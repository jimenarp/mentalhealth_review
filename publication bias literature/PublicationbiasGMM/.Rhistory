X[m,1] = rnorm(1,mean=theta[m,1],sd=sigma[m,1])
}
D=matrix(0,500,1)
Z=X/sigma
for (q in c(1:500)) {
if (abs(Z[q])>=1.96) {
D[q,1]=1
} else {
D[q,1] = rbinom(n=1,size=1,prob=0.2)
}
}
Z=as.matrix(Z)
D=as.matrix(D)
X=as.matrix(X)
sigma=as.matrix(sigma)
data=cbind(X,sigma,D)
data=data[1:100,]
X=-as.matrix(data[,1])
sigma=as.matrix(data[,2])
cluster_ID=as.matrix(seq(1,100,1))
symmetric=1
cutoffs=1.96
Psihat0=1
Psihat0_theta=matrix(c(0,1),1,2)
name="GMMResults"
#Options for optimization and numerical derivatives
source("/Users/britsharoni/Desktop/GMM Estimation R/MetaStudyGMMObjective.R")
GMM_obj <- function(Psi){
MetastudyGMMObjective(Psi, cutoffs, symmetric, X, sigma, cluster_ID)+max(-min(Psi),0)*10^5
}
mini<-optim(par=Psihat0,fn=GMM_obj,method="BFGS",control = list(abstol=10^-8,maxit=10^5));
Psihat1=mini$par;
Objval=mini$value;
mini<-optim(par=Psihat1,fn=GMM_obj);
Psihat=mini$par;
Objval=mini$value;
source("/Users/britsharoni/Desktop/GMM Estimation R/MetaStudyGMMObjective_new.R")
GMM_obj_new<-function(Psi){
#all_in_one=cbind(Psi,Psihat)
MetastudyGMMObjective_new(Psi,Psihat,cutoffs,symmetric,X,sigma,cluster_ID)
}
mini<-optim(par=Psihat0_theta,fn=GMM_obj_new,method="BFGS",control = list(abstol=10^-8,maxit=10^5));
Psihat1_theta=mini$par;
Objval_theta=mini$value;
mini<-optim(par=Psihat1_theta,fn=GMM_obj_new);
Psihat_theta=mini$par;
Objval_theta=mini$value;
Psihat_theta[2]=abs(Psihat_theta[2])
Psihat_all = cbind(Psihat_theta,Psihat);
source("/Users/britsharoni/Desktop/GMM Estimation R/MetastudyMoments_new.R")
mom=MetastudyMoments_new(cbind(Psihat_all,1),cutoffs,symmetric,X,sigma)
moments=mom$moment_mean;
Sigma_temp=mom$moment_var;
rhat=mom$raw_moments;
source("/Users/britsharoni/Desktop/GMM Estimation R/Clustered_covariance_estimate.R")
Sigma_hat=Clustered_covariance_estimate(rhat,cluster_ID);
stepsize=10^-3;
G=matrix(0,dim(moments)[2],length(Psihat_all));
for (n1 in c(1:length(Psihat_all))) {
beta_plus=Psihat_all;
beta_plus[n1]=beta_plus[n1]+stepsize
mom=MetastudyMoments_new(c(beta_plus,1),cutoffs,symmetric,X,sigma);
moments_plus=mom$moment_mean;
beta_minus=Psihat_all;
beta_minus[n1]=beta_minus[n1]-stepsize
mom=MetastudyMoments_new(cbind(beta_minus,1),cutoffs,symmetric,X,sigma);
moments_minus=mom$moment_mean;
G[,n1]=t(moments_plus-moments_minus)/(2*stepsize);
}
Varhat_all=MASS::ginv((t(G)%*%solve(Sigma_hat)%*%G))/length(X);
se_robust=sqrt(diag(Varhat_all));
beta_p[k,] = Psihat_all
sigma_p[k,] = se_robust
print(k)
Sys.sleep(0.01)
flush.console()
}
beta_p=matrix(0,500,3)
sigma_p=matrix(0,500,3)
for (k in c(1:500)) {
sigma = matrix(0,500,1)
X=matrix(0,500,1)
theta=matrix(0,500,1)
for (m in c(1:500)) {
theta[m,1] = rnorm(1)
sigma[m,1] = rchisq(1,df=2)
X[m,1] = rnorm(1,mean=theta[m,1],sd=sigma[m,1])
}
D=matrix(0,500,1)
Z=X/sigma
for (q in c(1:500)) {
if (abs(Z[q])>=1.96) {
D[q,1]=1
} else {
D[q,1] = rbinom(n=1,size=1,prob=0.2)
}
}
Z=as.matrix(Z)
D=as.matrix(D)
X=as.matrix(X)
sigma=as.matrix(sigma)
data=cbind(X,sigma,D)
data=data[1:100,]
X=-as.matrix(data[,1])
sigma=as.matrix(data[,2])
cluster_ID=as.matrix(seq(1,100,1))
symmetric=1
cutoffs=1.96
Psihat0=1
Psihat0_theta=matrix(c(0,1),1,2)
name="GMMResults"
#Options for optimization and numerical derivatives
source("/Users/britsharoni/Desktop/GMM Estimation R/MetaStudyGMMObjective.R")
GMM_obj <- function(Psi){
MetastudyGMMObjective(Psi, cutoffs, symmetric, X, sigma, cluster_ID)+max(-min(Psi),0)*10^5
}
mini<-optim(par=Psihat0,fn=GMM_obj,method="BFGS",control = list(abstol=10^-8,maxit=10^5));
Psihat==mini$par;
Objval=mini$value;
source("/Users/britsharoni/Desktop/GMM Estimation R/MetaStudyGMMObjective_new.R")
GMM_obj_new<-function(Psi){
#all_in_one=cbind(Psi,Psihat)
MetastudyGMMObjective_new(Psi,Psihat,cutoffs,symmetric,X,sigma,cluster_ID)
}
mini<-optim(par=Psihat0_theta,fn=GMM_obj_new,method="BFGS",control = list(abstol=10^-8,maxit=10^5));
Psihat_theta=mini$par;
Objval_theta=mini$value;
Psihat_theta[2]=abs(Psihat_theta[2])
Psihat_all = cbind(Psihat_theta,Psihat);
source("/Users/britsharoni/Desktop/GMM Estimation R/MetastudyMoments_new.R")
mom=MetastudyMoments_new(cbind(Psihat_all,1),cutoffs,symmetric,X,sigma)
moments=mom$moment_mean;
Sigma_temp=mom$moment_var;
rhat=mom$raw_moments;
source("/Users/britsharoni/Desktop/GMM Estimation R/Clustered_covariance_estimate.R")
Sigma_hat=Clustered_covariance_estimate(rhat,cluster_ID);
stepsize=10^-3;
G=matrix(0,dim(moments)[2],length(Psihat_all));
for (n1 in c(1:length(Psihat_all))) {
beta_plus=Psihat_all;
beta_plus[n1]=beta_plus[n1]+stepsize
mom=MetastudyMoments_new(c(beta_plus,1),cutoffs,symmetric,X,sigma);
moments_plus=mom$moment_mean;
beta_minus=Psihat_all;
beta_minus[n1]=beta_minus[n1]-stepsize
mom=MetastudyMoments_new(cbind(beta_minus,1),cutoffs,symmetric,X,sigma);
moments_minus=mom$moment_mean;
G[,n1]=t(moments_plus-moments_minus)/(2*stepsize);
}
Varhat_all=MASS::ginv((t(G)%*%solve(Sigma_hat)%*%G))/length(X);
se_robust=sqrt(diag(Varhat_all));
beta_p[k,] = Psihat_all
sigma_p[k,] = se_robust
print(k)
Sys.sleep(0.01)
flush.console()
}
sum(ifelse(abs(beta_p[,3]-0.2)/sigma_p[,3]<=1.96,1,0))/500
hist(beta_p[,1])
hist((beta_p[,3]-0.2)/sigma_p[,3])
(beta_p[,3]-0.2)/sigma_p[,3]
hist((beta_p[,3]-0.2)/sigma_p[,3],freq = FALSE)
hist(beta_p[,3])
dev.off()
hist(beta_p[,3])
hist(beta_p[,3]/sigma_p[,3])
beta_p[,3]>4
(beta_p[,3]-0.2)/sigma_p[,3]>4
(beta_p[,3]-0.2)/sigma_p[,3]>7
plot((beta_p[,3]-0.2)/sigma_p[,3])
hist((beta_p[,3]-0.2)/sigma_p[,3])
beta_P[,3]<0
beta_p[,3]<0
hist(theta)
View(sigma)
beta_p[,3]>0.2
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rnorm(1,mean=theta[m,1],sd=sigma[m,1])
View(X)
hist()
hist(X)
View(X)
includeinfigure=array(matrix(1,n,1));
n=3
includeinfigure=array(matrix(1,n,1));
Studynames <- vector(mode="character", length=n);
n=3
Studynames <- vector(mode="character", length=n);
Studynames <- vector(c("hello"),mode="character", length=n);
Studynames[1]<-"hello"
Studynames[2]<-hello
'$\\Sigma$'
cleaned_minwage_data <- read.csv("~/Desktop/GMM Estimation R/cleaned_minwage_data.csv", header=FALSE)
View(cleaned_minwage_data)
data=as.matrix(cleaned_minwage_data)
X=as.matrix(data[,1])
sigma=as.matrix(data[,2])
cluster_ID=as.matrix(data[,3])
symmetrix=0
critval=1.96;
n=length(X);
circlesize=75/sqrt(n);
color<-brewer.pal(8,"Greys");
GREY=color[3];
library(RColorBrewer)
critval=1.96;
n=length(X);
circlesize=75/sqrt(n);
color<-brewer.pal(8,"Greys");
GREY=color[3];
SLIDE_GREY=color[5];
color<-brewer.pal(8,"Purples")
BLUE=color[6];
circlesize=circlesize*4;
significant=(ifelse(abs(X/sigma)>critval,1,0));
nooutlier=(ifelse(sigma<50,1,0));
#Scatter plot for significant vs. insignificant values
rangeX=1.1*max(max(abs(X)),max(abs(sigma[nooutlier]))*critval);
pdf("/Users/britsharoni/Desktop/GMM Estimation R/FiguresandTables/GMMresultsScatter.pdf", width = 3, height = 3)
plot(x = X[!significant&nooutlier], y = sigma[!significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = GREY);
de.off()
dev.off()
dev.off()\
dev.off()
library(latex2exp)
critval=1.96;
n=length(X);
circlesize=75/sqrt(n);
color<-brewer.pal(8,"Greys");
GREY=color[3];
SLIDE_GREY=color[5];
color<-brewer.pal(8,"Purples")
BLUE=color[6];
circlesize=circlesize*4;
significant=(ifelse(abs(X/sigma)>critval,1,0));
nooutlier=(ifelse(sigma<50,1,0));
#Scatter plot for significant vs. insignificant values
rangeX=1.1*max(max(abs(X)),max(abs(sigma[nooutlier]))*critval);
pdf("/Users/britsharoni/Desktop/GMM Estimation R/FiguresandTables/GMMresultsScatter.pdf", width = 3, height = 3)
plot(x = X[!significant&nooutlier], y = sigma[!significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = GREY);
par(new=TRUE)
plot(x = X[significant&nooutlier], y = sigma[significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = BLUE);
par(new=TRUE)
lines(c(0,rangeX),c(0,rangeX/critval),col=GREY);
par(new=TRUE)
lines(c(-rangeX,0),c(rangeX/critval,0),col=GREY);
dev.off()
pdf("/Users/britsharoni/Desktop/GMM Estimation R/FiguresandTables/GMMresultsSlideScatter.pdf", width = 9, height = 9)
plot(x = X[!significant&nooutlier], y = sigma[!significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = SLIDE_GREY);
par(new=TRUE)
plot(x = X[significant&nooutlier], y = sigma[significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = BLUE);
par(new=TRUE)
lines(c(0,rangeX),c(0,rangeX/critval),col=SLIDE_GREY);
par(new=TRUE)
lines(c(-rangeX,0),c(rangeX/critval,0),col=SLIDE_GREY);
dev.off()
#Histogram of Z statistics
Zuse=X/sigma
if (max(abs(Zuse))>10) {
Zuse=Zuse[abs(Zuse)<=6]
}
ll=floor(min(Zuse))
lleven=floor(ll/2)*2
uu=ceiling(max(Zuse))
if (n>=30) {
uu2=ceiling((uu-0.36)/0.32)*0.32+0.36;
ll2=floor((ll+0.36)/0.32)*0.32-0.36;
edges=as.numeric(c(seq(ll2,-0.36,0.32),0,seq(0.36,uu2,0.32)))
} else {
uu2=ceiling((uu-0.68)/0.64)*0.64+0.68;
ll2=floor((ll+0.68)/0.64)*0.64-0.68;
edges=as.numeric(c(seq(ll2,-0.68,0.64),0,seq(0.68,uu2,0.64)))
}
pdf("/Users/britsharoni/Desktop/GMM Estimation R/FiguresandTables/GMMresultsScatterHist.pdf", width = 6, height = 2.5)
par(mfrow = c(1, 2))
h<-hist(Zuse,
plot=FALSE,
right=FALSE,
breaks=edges
) #right=FALSE means the bins are right open left closed (,]
h$counts=h$counts/sum(h$counts)
plot(h,col=BLUE,xlab=TeX('$X/\ \\Sigma$'),
ylab="Density",
main="",
xlim=c(min(edges),max(edges)),
ylim=c(0,max(h$counts)*1.1),freq=TRUE)
par(new=TRUE)
lines(c(-1.96,-1.96),c(0,max(Zuse)*1.1),col=GREY,lty=1, lwd=1)
par(new=TRUE)
lines(c(1.96,1.96),c(0,max(Zuse)*1.1),col=GREY,lty=1, lwd=1)
par(new=TRUE)
lines(c(0,0),c(0,max(Zuse)*1.1),col=GREY,lty=2, lwd=1)
plot(x = X[!significant&nooutlier], y = sigma[!significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = SLIDE_GREY);
par(new=TRUE)
plot(x = X[significant&nooutlier], y = sigma[significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = BLUE);
par(new=TRUE)
lines(c(0,rangeX),c(0,rangeX/critval),col=SLIDE_GREY);
par(new=TRUE)
lines(c(-rangeX,0),c(rangeX/critval,0),col=SLIDE_GREY);
dev.off()
pdf("/Users/britsharoni/Desktop/GMM Estimation R/FiguresandTables/GMMresultsScatterHist.pdf", width = 6, height = 2.5)
par(mfrow = c(1, 2))
plot(x = X[!significant&nooutlier], y = sigma[!significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = SLIDE_GREY);
par(new=TRUE)
plot(x = X[significant&nooutlier], y = sigma[significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = BLUE);
par(new=TRUE)
lines(c(0,rangeX),c(0,rangeX/critval),col=SLIDE_GREY);
par(new=TRUE)
lines(c(-rangeX,0),c(rangeX/critval,0),col=SLIDE_GREY);
h<-hist(Zuse,
plot=FALSE,
right=FALSE,
breaks=edges
) #right=FALSE means the bins are right open left closed (,]
h$counts=h$counts/sum(h$counts)
plot(h,col=BLUE,xlab=TeX('$X/\ \\Sigma$'),
ylab="Density",
main="",
xlim=c(min(edges),max(edges)),
ylim=c(0,max(h$counts)*1.1),freq=TRUE)
par(new=TRUE)
lines(c(-1.96,-1.96),c(0,max(Zuse)*1.1),col=GREY,lty=1, lwd=1)
par(new=TRUE)
lines(c(1.96,1.96),c(0,max(Zuse)*1.1),col=GREY,lty=1, lwd=1)
par(new=TRUE)
lines(c(0,0),c(0,max(Zuse)*1.1),col=GREY,lty=2, lwd=1)
dev.off()
pdf("/Users/britsharoni/Desktop/GMM Estimation R/FiguresandTables/GMMresultsScatterHist.pdf", width = 6, height = 2.5)
par(mfrow = c(1, 2))
h<-hist(Zuse,
plot=FALSE,
right=FALSE,
breaks=edges
) #right=FALSE means the bins are right open left closed (,]
h$counts=h$counts/sum(h$counts)
plot(h,col=BLUE,xlab=TeX('$X/\ \\Sigma$'),
ylab="Density",
main="",
xlim=c(min(edges),max(edges)),
ylim=c(0,max(h$counts)*1.1),freq=TRUE)
par(new=TRUE)
lines(c(-1.96,-1.96),c(0,max(Zuse)*1.1),col=GREY,lty=1, lwd=1)
par(new=TRUE)
lines(c(1.96,1.96),c(0,max(Zuse)*1.1),col=GREY,lty=1, lwd=1)
par(new=TRUE)
lines(c(0,0),c(0,max(Zuse)*1.1),col=GREY,lty=2, lwd=1)
dev.off()
pdf("/Users/britsharoni/Desktop/GMM Estimation R/FiguresandTables/GMMresultsScatterHist.pdf", width = 6, height = 2.5)
par(mfrow = c(1, 2))
plot(x = X[!significant&nooutlier], y = sigma[!significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = SLIDE_GREY);
par(new=TRUE)
plot(x = X[significant&nooutlier], y = sigma[significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = BLUE);
par(new=TRUE)
lines(c(0,rangeX),c(0,rangeX/critval),col=SLIDE_GREY);
par(new=TRUE)
lines(c(-rangeX,0),c(rangeX/critval,0),col=SLIDE_GREY);
h<-hist(Zuse,
plot=FALSE,
right=FALSE,
breaks=edges
) #right=FALSE means the bins are right open left closed (,]
h$counts=h$counts/sum(h$counts)
plot(h,col=BLUE,xlab=TeX('$X/\ \\Sigma$'),
ylab="Density",
main="",
xlim=c(min(edges),max(edges)),
ylim=c(0,max(h$counts)*1.1),freq=TRUE)
par(new=TRUE)
lines(c(-1.96,-1.96),c(0,max(Zuse)*1.1),col=GREY,lty=1, lwd=1)
par(new=TRUE)
lines(c(1.96,1.96),c(0,max(Zuse)*1.1),col=GREY,lty=1, lwd=1)
par(new=TRUE)
lines(c(0,0),c(0,max(Zuse)*1.1),col=GREY,lty=2, lwd=1)
dev.off()
pdf("/Users/britsharoni/Desktop/GMM Estimation R/FiguresandTables/GMMresultsScatterHist.pdf", width = 6, height = 2.5)
h<-hist(Zuse,
plot=FALSE,
right=FALSE,
breaks=edges
) #right=FALSE means the bins are right open left closed (,]
h$counts=h$counts/sum(h$counts)
par(mfrow = c(1, 2))
plot(h,col=BLUE,xlab=TeX('$X/\ \\Sigma$'),
ylab="Density",
main="",
xlim=c(min(edges),max(edges)),
ylim=c(0,max(h$counts)*1.1),freq=TRUE)
par(new=TRUE)
lines(c(-1.96,-1.96),c(0,max(Zuse)*1.1),col=GREY,lty=1, lwd=1)
par(new=TRUE)
lines(c(1.96,1.96),c(0,max(Zuse)*1.1),col=GREY,lty=1, lwd=1)
par(new=TRUE)
lines(c(0,0),c(0,max(Zuse)*1.1),col=GREY,lty=2, lwd=1)
plot(x = X[!significant&nooutlier], y = sigma[!significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = SLIDE_GREY);
par(new=TRUE)
plot(x = X[significant&nooutlier], y = sigma[significant&nooutlier],
pch = 19, frame = FALSE,
xlab = TeX('$X$'), ylab = TeX('$\\Sigma$'), xlim = c(-rangeX,rangeX), ylim = c(0,rangeX/critval), col = BLUE);
par(new=TRUE)
lines(c(0,rangeX),c(0,rangeX/critval),col=SLIDE_GREY);
par(new=TRUE)
lines(c(-rangeX,0),c(rangeX/critval,0),col=SLIDE_GREY);
dev.off()
library(RColorBrewer)
library(latex2exp)
library(xtable)
library(here)
here("Documents","Harvard","RAing","Isaiah Andrews","Publication Bias","Codes","GMM Estimation R","PublicationbiasGMM")
library(PublicationbiasGMM)
data_Deworming <- read.csv(here("Data","deworming","cleaned_deworming_data.csv"))
data_Deworming=as.matrix(data_Deworming)
here(
)
here()
data_deworming<-read.csv(here("Documents","Harvard","RAing","Isaiah Andrews","Publication Bias","Codes","GMM Estimation R","PublicationbiasGMM","Data","deworming","cleaned_deworming_data.csv"))
here()
here()
data_deworming=as.matrix(data_deworming)
c(1,2,3)
b=c(1,2,3)
rm(b)
Studynames <- read.csv(here("Documents","Harvard","RAing","Isaiah Andrews","Publication Bias","Codes","GMM Estimation R","PublicationbiasGMM","Data","deworming","DewormingLabels.csv"))
Studynames=as.character(Studynames[,1])
X=as.matrix(data_deworming[,1])
sigma=as.matrix(data_deworming[,2])
cluster_ID=as.matrix(data_deworming[,3])
symmetric=1
cutoffs=1.96
PublicationbiasGMM(X,sigma,cluster_ID,symmetric,cutoffs,Studynames)
here()
set_here("Documents","Harvard","RAing","Isaiah Andrews","Publication Bias","Codes","GMM Estimation R","PublicationbiasGMM")
here()
?set_here
set_here(c("Documents","Harvard","RAing","Isaiah Andrews","Publication Bias","Codes","GMM Estimation R","PublicationbiasGMM"))
here()
set_here("Documents")
set_here("Harvard")
here()
rm(list=ls())
here()
setwd("/Users/britsharoni/Documents/Harvard/RAing/Isaiah Andrews/Publication Bias/Codes/GMM Estimation R/PublicationbiasGMM")
here()
library(here)
here()
library(RColorBrewer)
library(latex2exp)
library(xtable)
library(here)
data_deworming <- read.csv(here("Data","deworming","cleaned_deworming_data.csv"))
data_deworming=as.matrix(data_deworming)
Studynames <- read.csv(here("Data","deworming","DewormingLabels.csv"))
Studynames=as.character(Studynames[,1])
X=as.matrix(data_deworming[,1])
sigma=as.matrix(data_deworming[,2])
cluster_ID=as.matrix(data_deworming[,3])
symmetric=1
cutoffs=1.96
library(PublicationbiasGMM)
PublicationbiasGMM(X,sigma,cluster_ID,symmetric,cutoffs,Studynames)
View(data_deworming)
data_deworming <- read.csv(here("Data","deworming","cleaned_deworming_data.csv"),header = FALSE)
data_deworming=as.matrix(data_deworming)
Studynames <- read.csv(here("Data","deworming","DewormingLabels.csv"))
Studynames=as.character(Studynames[,1])
X=as.matrix(data_deworming[,1])
sigma=as.matrix(data_deworming[,2])
cluster_ID=as.matrix(data_deworming[,3])
symmetric=1
cutoffs=1.96
PublicationbiasGMM(X,sigma,cluster_ID,symmetric,cutoffs,Studynames)
data_minwage <- read.csv(here("Data","MinimumWagev2","cleaned_minwage_data.csv"),header = FALSE)
data_minwage=as.matrix(data_minwage)
X=as.matrix(data_minwage[,1])
X=-X
sigma=as.matrix(data_minwage[,2])
cluster_ID=as.matrix(data_minwage[,3])
symmetric=0
cutoffs=c(-1.96,0,1.96)
Studynames<-vector(mode="character", length=length(X))
PublicationbiasGMM(X,sigma,cluster_ID,symmetric,cutoffs,Studynames)
warnings()
